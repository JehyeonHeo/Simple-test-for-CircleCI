version: 2.1

jobs:
  Add-to-doc:
    docker:
      - image: node:15.5.1-buster
    steps:
      - checkout
      - run:
          name: Try apt-get
          command: |
            apt-get update
            apt-get upgrade
            apt-get install -y curl
      #      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #      unzip awscliv2.zip
      #      ./aws/install
      - run:
          name: Compress backend file
          command: |
            pwd
            ls -a
            tar -czvf cir.tar.gz .circleci
      - persist_to_workspace:
          root: .
          paths:
            - cir.tar.gz
                        
      - run:
          name: Make a file in .circleci folder
          command: |
            cd .circleci
            echo "4567" > testfile
            cat testfile
            echo "qwoerj" >> testfile
      - run:
          name: Send file result to memstash
          command: |
            # Your code here
            cat .circleci/testfile
            #variable_test=$(<.circleci/testfile)
            curl -H "Content-Type: text/plain" -H "token: qwer" \
              --request PUT --data "$(<.circleci/testfile)" https://api.memstash.io/values/asdf
      #- run:
      #    name: Run aws-cli
      #    command: |
      #      aws ec2 describe-instances \
      #        --query 'Reservations[*].Instances[*].PublicIpAddress' \
      #        --filters "Name=tag:project,Values=udapeople" \
      #        --output text >> zxcv
      #      cat zxcv
      #- run:
      #    name: Add back-end ip to ansible inventory
      #    command: |
      #      # Your code here
      #      echo "1234" > inventory.txt
      #      cat .circleci/inventory.txt
      #- run:
      #    name: Add more contents to txt
      #    command: |
      #      echo "qwer" >> .circleci/inventory.txt
      #- run:
      #    name: Check the contents of inventory.txt
      #    command: cat .circleci/inventory.txt
      #- run:
      #    name: Install tar, gzip to use workspace.
      #    command: | 
      #      yum update
      #      yum install -y tar gzip
      - persist_to_workspace:
          root: .
          paths:
            - .circleci/testfile

  Check-workspace:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Check workspace path and contents
          command: |
            echo "1. pwd"
            pwd                    # The result is /root/project
            ls -a
      - run:
          command: yum install -y tar gzip
      - attach_workspace:
          at: ~/
      - run:
          command: |
            cat ~/.circleci/testfile
            export OldWorkflowID=$(cat ~/OldWorkflowID.txt)
            export STACKS=($(aws cloudformation list-stacks --query "StackSummaries[*].StackName" \
              --stack-status-filter CREATE_COMPLETE --no-paginate --output text))
            echo "${OldWorkflowID}"
            echo "${STACKS[@]}"
            
            for id in "${STACKS[@]}"
            do
              echo $id
              if [[ ${id: -7} == "${OldWorkflowID}" ]]
              then
                # your code here
                if [[ "${STACKS[@]}" == *${id}* ]]
                then
                  echo "Delete old S3 and old stacks"
                else
                  echo "Already deleted"   
              else
                echo "Should not delete newly launched stacks"
              fi
            done
      #- run:
      #    name: Get tar.gz file and check the contents
      #    command: |
      #      pwd
      #      ls -a
      #      cd ..
      #      echo "/root"
      #      ls -a
      #      echo "tar unzip"
      #      tar -xzvf cir.tar.gz
      #      ls -a
      #      echo "move to .circleci"
      #      cd .circleci
      #      ls -a
      #- run:
      #    name: Install nodejs and npm
      #    command: |
      #      yum update
      #      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
      #      . ~/.nvm/nvm.sh
      #      nvm install v9.4.0
      #      #source .bash_profile
      #      #yum install -y nodejs npm
      #      node -v
      #      npm -v
      #      #npm --prefix .circleci -v
      #      cd frontend
      #      echo "in frontend"
      #      npm -v
      #      npm i
      #      npm run build
      #- attach_workspace:
      #    at: .
      #- run:
      #    name: check npm in inner folder
      #    command: |
      #      npm --prefix .circleci -v
      #      cd .circleci
      #      echo "in .circleci"
      #      npm -v
      #- run:
      #    name: Check workspace path and contents
      #    command: |
      #      echo "1. pwd"
      #      pwd                    # The result is /root/project
      #      ls -a
      #      echo "2. project"
      #      echo "~/project/project/.circleci/testfile.txt"
      #      cat ~/project/project/.circleci/testfile.txt # -> There isn't /root/project/inventory.txt
      #      echo "3. project/.circleci"
      #      echo "/root/project/project/.circleci/testfile.txt"
      #      cd project/.circleci
      #      ls
      #      cat testfile.txt
      #      echo "4. Try again cd project"
      #      cd project
      #      ls
            #echo "~/project/inventory.txt"
            #cat ~/project/inventory.txt # -> ~/ means /root/. And there isn't /root/project/inventory.txt
            #echo "~/project/.circleci/inventory.txt"
            #cat ~/project/.circleci/inventory.txt
            #echo "ls"
            #ls

workflows:
  default:
    jobs:
      - Add-to-doc
      - Check-workspace
          requires:
            - Add-to-doc      
          